{
  "name" : "Community Screening Followup Program Encounter (voided~13158)",
  "uuid" : "6a6bbc78-d003-4dfe-a8f7-804c3323dba0",
  "formType" : "ProgramEncounter",
  "formElementGroups" : [ {
    "uuid" : "78ba24cb-99e7-475b-8074-c6906e207470",
    "name" : "Menstruation",
    "displayOrder" : 1.0,
    "formElements" : [ {
      "name" : "Regularity of Menstruation",
      "uuid" : "a9d899c8-b493-45df-b229-00928a9f95ba",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Regularity of Menstruation",
        "uuid" : "909ffa10-31d4-4c7b-a35b-9a9323a966d7",
        "dataType" : "Coded",
        "answers" : [ {
          "name" : "Irregular",
          "uuid" : "1b00f912-6a00-4721-8e09-f76775d6c21f",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 0.0,
          "active" : true
        }, {
          "name" : "Regular",
          "uuid" : "bf3255fa-481c-46e0-b652-6d83ad523d5b",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 1.0,
          "active" : true
        }, {
          "name" : "Menstruation Stopped",
          "uuid" : "41eaf421-fea8-4644-a368-5d1ad4108da3",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 2.0,
          "active" : true
        }, {
          "name" : "Hysterectomy Done",
          "uuid" : "640d4f87-23ff-428a-ac94-02e2ae9165aa",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 3.0,
          "active" : true
        } ],
        "active" : true
      },
      "displayOrder" : 1.0,
      "type" : "SingleSelect",
      "rule" : "'use strict';\n({params, imports}) => {\n  const programEncounter = params.entity;\n  const moment = imports.moment;\n  const formElement = params.formElement;\n  const _ = imports.lodash;\n  let visibility = true;\n  let value = null;\n  let answersToSkip = [];\n  let validationErrors = [];\n  \n  const condition11 = new imports.rulesConfig.RuleCondition({programEncounter, formElement}).when.gender.equals(\"Female\").matches();\n  \n  visibility = condition11 ;\n  \n  return new imports.rulesConfig.FormElementStatus(formElement.uuid, visibility, value, answersToSkip, validationErrors);\n};",
      "declarativeRule" : [ {
        "actions" : [ {
          "actionType" : "showFormElement"
        }, { } ],
        "conditions" : [ {
          "compoundRule" : {
            "rules" : [ {
              "lhs" : {
                "type" : "gender"
              },
              "rhs" : {
                "type" : "value",
                "value" : "Female"
              },
              "operator" : "equals"
            } ]
          }
        } ]
      } ],
      "mandatory" : true
    }, {
      "name" : "Duration of Menstruation",
      "uuid" : "d00f8b91-e5d0-4402-8365-70ac20378356",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Duration of Menstruation",
        "uuid" : "68d1581c-a43d-43c1-bc14-245bf967f7ae",
        "dataType" : "Coded",
        "answers" : [ {
          "name" : "One day",
          "uuid" : "c39614e2-57c0-43c0-b38c-7d2fbd760aef",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 0.0,
          "active" : true
        }, {
          "name" : "Two to three days",
          "uuid" : "47a34cd4-bd8a-4331-b8d0-11ca173c8be3",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 1.0,
          "active" : true
        }, {
          "name" : "Four to six days",
          "uuid" : "5f0139a1-8c99-44c8-a537-35118b485add",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 2.0,
          "active" : true
        }, {
          "name" : "Other",
          "uuid" : "cf383e34-8ed9-47bd-9e86-41f726773a1f",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 4.0,
          "active" : true
        }, {
          "name" : "More than six days",
          "uuid" : "c8111c6c-f06b-489f-846f-5ae99ba86fd1",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 3.0,
          "active" : true
        } ],
        "active" : true
      },
      "displayOrder" : 2.0,
      "type" : "SingleSelect",
      "rule" : "'use strict';\n({params, imports}) => {\n  const programEncounter = params.entity;\n  const moment = imports.moment;\n  const formElement = params.formElement;\n  const _ = imports.lodash;\n  let visibility = true;\n  let value = null;\n  let answersToSkip = [];\n  let validationErrors = [];\n  \n  const condition11 = new imports.rulesConfig.RuleCondition({programEncounter, formElement}).when.valueInEncounter(\"909ffa10-31d4-4c7b-a35b-9a9323a966d7\").containsAnyAnswerConceptName(\"bf3255fa-481c-46e0-b652-6d83ad523d5b\",\"1b00f912-6a00-4721-8e09-f76775d6c21f\").and.when.gender.equals(\"Female\").matches();\n  \n  visibility = condition11 ;\n  \n  return new imports.rulesConfig.FormElementStatus(formElement.uuid, visibility, value, answersToSkip, validationErrors);\n};",
      "declarativeRule" : [ {
        "actions" : [ {
          "actionType" : "showFormElement"
        }, { } ],
        "conditions" : [ {
          "compoundRule" : {
            "rules" : [ {
              "lhs" : {
                "type" : "concept",
                "scope" : "encounter",
                "conceptName" : "Regularity of Menstruation",
                "conceptUuid" : "909ffa10-31d4-4c7b-a35b-9a9323a966d7",
                "conceptDataType" : "Coded"
              },
              "rhs" : {
                "type" : "answerConcept",
                "answerConceptNames" : [ "Regular", "Irregular" ],
                "answerConceptUuids" : [ "bf3255fa-481c-46e0-b652-6d83ad523d5b", "1b00f912-6a00-4721-8e09-f76775d6c21f" ]
              },
              "operator" : "containsAnyAnswerConceptName"
            }, {
              "lhs" : {
                "type" : "gender"
              },
              "rhs" : {
                "type" : "value",
                "value" : "Female"
              },
              "operator" : "equals"
            } ],
            "conjunction" : "and"
          }
        } ]
      } ],
      "mandatory" : true
    }, {
      "name" : "Other Duration of menstruation, please specify",
      "uuid" : "b98a61ab-4214-4fec-b8fc-6520b8050205",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Other Duration of menstruation",
        "uuid" : "5ba4b268-0e5b-43a9-bfbd-3eeb87e201b9",
        "dataType" : "Text",
        "answers" : [ ],
        "active" : true
      },
      "displayOrder" : 3.0,
      "type" : "SingleSelect",
      "rule" : "'use strict';\n({params, imports}) => {\n  const programEncounter = params.entity;\n  const moment = imports.moment;\n  const formElement = params.formElement;\n  const _ = imports.lodash;\n  let visibility = true;\n  let value = null;\n  let answersToSkip = [];\n  let validationErrors = [];\n  \n  const condition11 = new imports.rulesConfig.RuleCondition({programEncounter, formElement}).when.valueInEncounter(\"68d1581c-a43d-43c1-bc14-245bf967f7ae\").containsAnswerConceptName(\"cf383e34-8ed9-47bd-9e86-41f726773a1f\").matches();\n  \n  visibility = condition11 ;\n  \n  return new imports.rulesConfig.FormElementStatus(formElement.uuid, visibility, value, answersToSkip, validationErrors);\n};",
      "declarativeRule" : [ {
        "actions" : [ {
          "actionType" : "showFormElement"
        }, { } ],
        "conditions" : [ {
          "compoundRule" : {
            "rules" : [ {
              "lhs" : {
                "type" : "concept",
                "scope" : "encounter",
                "conceptName" : "Duration of Menstruation",
                "conceptUuid" : "68d1581c-a43d-43c1-bc14-245bf967f7ae",
                "conceptDataType" : "Coded"
              },
              "rhs" : {
                "type" : "answerConcept",
                "answerConceptNames" : [ "Other" ],
                "answerConceptUuids" : [ "cf383e34-8ed9-47bd-9e86-41f726773a1f" ]
              },
              "operator" : "containsAnswerConceptName"
            } ]
          }
        } ]
      } ],
      "mandatory" : true
    }, {
      "name" : "Absorbent material used most of the times",
      "uuid" : "5d6665e7-82b8-4f88-acd8-09f62882226e",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Absorbent material used most of the times",
        "uuid" : "50d64a4c-879b-4658-a722-27b43b2e9c55",
        "dataType" : "Coded",
        "answers" : [ {
          "name" : "Other",
          "uuid" : "cf383e34-8ed9-47bd-9e86-41f726773a1f",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 6.0,
          "active" : true
        }, {
          "name" : "Tampons",
          "uuid" : "54f8de75-3ab9-4a51-b81b-7a7245fc2858",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 3.0,
          "active" : true
        }, {
          "name" : "Sanitary Napkin",
          "uuid" : "36e90a55-3674-4d29-83df-9ed550e8e1c0",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 1.0,
          "active" : true
        }, {
          "name" : "Cloth",
          "uuid" : "183b596a-5edb-4aa5-a931-beedb3c75b90",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 2.0,
          "active" : true
        }, {
          "name" : "Menstrual cup",
          "uuid" : "d3253bc4-19a9-4be0-a372-2462298afbca",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 4.0,
          "active" : true
        }, {
          "name" : "None",
          "uuid" : "04668370-364e-42f8-a26e-2d8c50c8828d",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 5.0,
          "unique" : true,
          "active" : true
        } ],
        "active" : true
      },
      "displayOrder" : 4.0,
      "type" : "SingleSelect",
      "rule" : "'use strict';\n({params, imports}) => {\n  const programEncounter = params.entity;\n  const moment = imports.moment;\n  const formElement = params.formElement;\n  const _ = imports.lodash;\n  let visibility = true;\n  let value = null;\n  let answersToSkip = [];\n  let validationErrors = [];\n  \n  const condition11 = new imports.rulesConfig.RuleCondition({programEncounter, formElement}).when.gender.equals(\"Female\").matches();\n  \n  visibility = condition11 ;\n  \n  return new imports.rulesConfig.FormElementStatus(formElement.uuid, visibility, value, answersToSkip, validationErrors);\n};",
      "declarativeRule" : [ {
        "actions" : [ {
          "actionType" : "showFormElement"
        }, { } ],
        "conditions" : [ {
          "compoundRule" : {
            "rules" : [ {
              "lhs" : {
                "type" : "gender"
              },
              "rhs" : {
                "type" : "value",
                "value" : "Female"
              },
              "operator" : "equals"
            } ]
          }
        } ]
      } ],
      "mandatory" : true
    }, {
      "name" : "Other absorbent material used, please specify",
      "uuid" : "c20b1a6c-ee2f-49e2-beae-caddbec663a1",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Other absorbent material used",
        "uuid" : "3059386a-abfe-42a8-9a54-7f450e13cce2",
        "dataType" : "Text",
        "answers" : [ ],
        "active" : true
      },
      "displayOrder" : 5.0,
      "type" : "SingleSelect",
      "rule" : "'use strict';\n({params, imports}) => {\n  const programEncounter = params.entity;\n  const moment = imports.moment;\n  const formElement = params.formElement;\n  const _ = imports.lodash;\n  let visibility = true;\n  let value = null;\n  let answersToSkip = [];\n  let validationErrors = [];\n  \n  const condition11 = new imports.rulesConfig.RuleCondition({programEncounter, formElement}).when.valueInEncounter(\"50d64a4c-879b-4658-a722-27b43b2e9c55\").containsAnswerConceptName(\"cf383e34-8ed9-47bd-9e86-41f726773a1f\").matches();\n  \n  visibility = condition11 ;\n  \n  return new imports.rulesConfig.FormElementStatus(formElement.uuid, visibility, value, answersToSkip, validationErrors);\n};",
      "declarativeRule" : [ {
        "actions" : [ {
          "actionType" : "showFormElement"
        }, { } ],
        "conditions" : [ {
          "compoundRule" : {
            "rules" : [ {
              "lhs" : {
                "type" : "concept",
                "scope" : "encounter",
                "conceptName" : "Absorbent material used most of the times",
                "conceptUuid" : "50d64a4c-879b-4658-a722-27b43b2e9c55",
                "conceptDataType" : "Coded"
              },
              "rhs" : {
                "type" : "answerConcept",
                "answerConceptNames" : [ "Other" ],
                "answerConceptUuids" : [ "cf383e34-8ed9-47bd-9e86-41f726773a1f" ]
              },
              "operator" : "containsAnswerConceptName"
            } ]
          }
        } ]
      } ],
      "mandatory" : true
    } ],
    "rule" : "'use strict';\n({params, imports}) => {\n    const programEncounter = params.entity;\n    const moment = imports.moment;\n    const formElementGroup = params.formElementGroup;\n    const _ = imports.lodash;\n    let visibility = true;\n    return formElementGroup.formElements.map((formElement) => {\n        \n  const condition11 = new imports.rulesConfig.RuleCondition({programEncounter, formElement}).when.gender.equals(\"Female\").matches();\n  \n        visibility = condition11 ;\n  \n        return new imports.rulesConfig.FormElementStatus(formElement.uuid, visibility, null);\n    });\n};",
    "declarativeRule" : [ {
      "actions" : [ {
        "actionType" : "showFormElementGroup"
      }, { } ],
      "conditions" : [ {
        "compoundRule" : {
          "rules" : [ {
            "lhs" : {
              "type" : "gender"
            },
            "rhs" : {
              "type" : "value",
              "value" : "Female"
            },
            "operator" : "equals"
          } ]
        }
      } ]
    } ],
    "display" : "Menstruation",
    "timed" : false
  }, {
    "uuid" : "d4286482-dba6-423b-8d02-3c3786269c1b",
    "name" : "Hb Details",
    "displayOrder" : 2.0,
    "formElements" : [ {
      "name" : "Hb",
      "uuid" : "0256f70f-65a6-4b68-b545-7bd9ec3288b0",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Hb",
        "uuid" : "3f1d701c-9c33-46dd-9143-b56e06fc495b",
        "dataType" : "Coded",
        "answers" : [ {
          "name" : "13 gm/dl or more than it (Normal)",
          "uuid" : "be8e6b63-d5e8-47af-9efe-2cdfbd84c3ba",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 7.0,
          "active" : true
        }, {
          "name" : "12 gm/dl or more than it (Normal)",
          "uuid" : "559f614a-1386-4662-ba25-f2cd5017ea50",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 3.0,
          "active" : true
        }, {
          "name" : "Between 11-12.9 gm/dl (Mild Anaemia)",
          "uuid" : "18a31a40-5e6d-496c-93e7-d8a47fa45876",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 6.0,
          "active" : true
        }, {
          "name" : "Between 11-11.9 gm/dl (Mild Anaemia)",
          "uuid" : "2cc1be43-1a35-4cb6-9120-5c114c9e58c2",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 5.0,
          "active" : true
        }, {
          "name" : "Between 8 to 10.9 gm/dl (Moderate Anaemia)",
          "uuid" : "f2ce9989-d20c-4fe9-895b-c00ab9b5690e",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 4.0,
          "active" : true
        }, {
          "name" : "8 gm/dl or less than it (Severe Anaemia)",
          "uuid" : "f015ffb9-babc-434f-87d1-d46c1a52fa2d",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 0.0,
          "active" : true
        }, {
          "name" : "Between 8 to 10 gm/dl (Moderate Anaemia)",
          "uuid" : "5b943e5b-56c7-40b4-977d-9c9291fec8b0",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 1.0,
          "active" : true
        }, {
          "name" : "Between 10 to 12 gm/dl (Mild Anaemia)",
          "uuid" : "9847a475-3347-49d0-9f67-60a985003f96",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 2.0,
          "active" : true
        } ],
        "active" : true
      },
      "displayOrder" : 1.0,
      "type" : "SingleSelect",
      "rule" : "'use strict';\n({params, imports}) => {\n    const encounter = params.entity;\n    const moment = imports.moment;\n    const formElement = params.formElement;\n    const _ = imports.lodash;\n    let visibility = true;\n    let value = null;\n    let answersToSkip = [];\n    let answersToShow = [];\n    let validationErrors = [];\n    let gender = encounter.individual.gender;\n    let age = encounter.individual.getAgeInYears(asOnDate = moment(), precise = true)\n    \n    visibility = gender.isFemale() || (gender.isMale() && age >= 10)\n\n    function getAnswerToShow(HbValues) {\n        let answerList = [];\n        _.forEach(HbValues, (answer) => {\n            const answerToShow = formElement.getAnswerWithConceptUuid(answer);\n            if (answerToShow) answerList.push(answerToShow);\n        });\n        return answerList;\n    }\n    \n    if(visibility) {\n        femaleHbValues = ['f015ffb9-babc-434f-87d1-d46c1a52fa2d', '5b943e5b-56c7-40b4-977d-9c9291fec8b0', '9847a475-3347-49d0-9f67-60a985003f96', '559f614a-1386-4662-ba25-f2cd5017ea50']\n        maleHbValuesAge10to15 = ['f015ffb9-babc-434f-87d1-d46c1a52fa2d', 'f2ce9989-d20c-4fe9-895b-c00ab9b5690e', '2cc1be43-1a35-4cb6-9120-5c114c9e58c2', '559f614a-1386-4662-ba25-f2cd5017ea50']\n        maleHbValuesAgeMoreThan15 = ['f015ffb9-babc-434f-87d1-d46c1a52fa2d', 'f2ce9989-d20c-4fe9-895b-c00ab9b5690e', '18a31a40-5e6d-496c-93e7-d8a47fa45876', 'be8e6b63-d5e8-47af-9efe-2cdfbd84c3ba']\n        \n        if(gender.isFemale()) {\n            answersToShow = getAnswerToShow(femaleHbValues)\n        } else if(gender.isMale() && age > 15) {\n            answersToShow = getAnswerToShow(maleHbValuesAgeMoreThan15)\n        } else if(gender.isMale() && age >= 10) {\n            answersToShow = getAnswerToShow(maleHbValuesAge10to15)\n        } else {\n            visibility = false;\n        }\n    }\n  \n    return new imports.rulesConfig.FormElementStatus(formElement.uuid, visibility, value, answersToSkip, validationErrors, answersToShow);\n};",
      "mandatory" : true
    }, {
      "name" : "No. of IFA tablets given at the time of screening",
      "uuid" : "c79dd559-a417-46ec-ac21-df0ae6755b0f",
      "keyValues" : [ ],
      "concept" : {
        "name" : "No. of IFA tablets given at the time of screening",
        "uuid" : "2b6fe079-79c4-433f-b5fe-7bcfb9e5d922",
        "dataType" : "Numeric",
        "answers" : [ ],
        "active" : true
      },
      "displayOrder" : 2.0,
      "type" : "SingleSelect",
      "rule" : "'use strict';\n({params, imports}) => {\n    const encounter = params.entity;\n    const moment = imports.moment;\n    const formElement = params.formElement;\n    const _ = imports.lodash;\n    let visibility = true;\n    let value = null;\n    let answersToSkip = [];\n    let validationErrors = [];\n    const encounters = encounter.individual.getEncounters();\n\n    if(encounters && encounters.length > 0) {\n        const hbScreeingEncounter = encounter.filter((enc) => enc.encounterType.name == '' && enc.encounterDateTime != null)\n        if(hbScreeingEncounter && hbScreeingEncounter.length > 0) {\n            const noOfIfaTablets = hbScreeingEncounter.getObservationReadableValue('No. of IFA Tablets given in current visit');\n            if(noOfIfaTablets) {\n                value = noOfIfaTablets;\n            }\n        }\n    }\n    \n    if(value == null) visibility = false;\n  \n    return new imports.rulesConfig.FormElementStatus(formElement.uuid, visibility, value, answersToSkip, validationErrors);\n};",
      "mandatory" : false
    }, {
      "name" : "No. of IFA tablets consumed from the IFA tablets given during the last visit",
      "uuid" : "4e584c66-a814-4122-9cbb-eef3c6e5fa04",
      "keyValues" : [ {
        "key" : "editable",
        "value" : false
      } ],
      "concept" : {
        "name" : "No. of IFA tablets consumed from the IFA tablets given during the last visit",
        "uuid" : "bef858eb-8a19-4fef-b5f6-2504e2ac4a08",
        "dataType" : "Numeric",
        "answers" : [ ],
        "active" : true
      },
      "displayOrder" : 3.0,
      "type" : "SingleSelect",
      "rule" : "'use strict';\n({params, imports}) => {\n    const encounter = params.entity;\n    const moment = imports.moment;\n    const formElement = params.formElement;\n    const _ = imports.lodash;\n    let visibility = true;\n    let value = null;\n    let answersToSkip = [];\n    let validationErrors = [];\n    const encounters = encounter.individual.getEncounters();\n\n    if(encounters && encounters.length > 0) {\n        const hbScreeingEncounter = encounter.filter((enc) => enc.encounterType.name == '' && enc.encounterDateTime != null)\n        if(hbScreeingEncounter && hbScreeingEncounter.length > 0) {\n            const noOfIfaTablets = hbScreeingEncounter.getObservationReadableValue('No. of IFA Tablets given in current visit');\n            const noOfIfaTabletsGivenInLastVisit = encounter.getObservationReadableValue('No. of IFA tablets consumed from the IFA tablets given during the last visit');\n            if(noOfIfaTablets && noOfIfaTabletsGivenInLastVisit && noOfIfaTabletsGivenInLastVisit > noOfIfaTablets) {\n                validationErrors.push(\"No. of IFA tablets consumed from the IFA tablets given during the last visit cannot be greater than the No. of IFA Tablets given in current visit at the Screening Time\");\n            }\n        }\n    }\n  \n    return new imports.rulesConfig.FormElementStatus(formElement.uuid, visibility, value, answersToSkip, validationErrors);\n};",
      "mandatory" : false
    }, {
      "name" : "IFA Tablets given during current visit",
      "uuid" : "ef734dbc-a5db-4d23-ad5c-85944ac5913c",
      "keyValues" : [ ],
      "concept" : {
        "name" : "IFA Tablets given during current visit",
        "uuid" : "25dccb89-30b3-4294-b8fe-ce8cfa2da138",
        "dataType" : "Coded",
        "answers" : [ {
          "name" : "No",
          "uuid" : "30ade50e-fef5-4de1-9a6b-965cc66132ba",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 1.0,
          "active" : true
        }, {
          "name" : "Yes",
          "uuid" : "f7a3a360-58d3-4987-99ff-e7fb97f911a0",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 0.0,
          "active" : true
        } ],
        "active" : true
      },
      "displayOrder" : 4.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "No. of IFA Tablets given in current visit",
      "uuid" : "551ab088-7255-4924-85f0-6f14fae63bb5",
      "keyValues" : [ ],
      "concept" : {
        "name" : "No. of IFA Tablets given in current visit",
        "uuid" : "197a6f42-ed70-4bf9-8f3c-98c9466c2031",
        "dataType" : "Numeric",
        "answers" : [ ],
        "lowAbsolute" : 0.0,
        "active" : true
      },
      "displayOrder" : 5.0,
      "type" : "SingleSelect",
      "rule" : "'use strict';\n({params, imports}) => {\n  const programEncounter = params.entity;\n  const moment = imports.moment;\n  const formElement = params.formElement;\n  const _ = imports.lodash;\n  let visibility = true;\n  let value = null;\n  let answersToSkip = [];\n  let validationErrors = [];\n  \n  const condition11 = new imports.rulesConfig.RuleCondition({programEncounter, formElement}).when.valueInEncounter(\"25dccb89-30b3-4294-b8fe-ce8cfa2da138\").containsAnswerConceptName(\"f7a3a360-58d3-4987-99ff-e7fb97f911a0\").matches();\n  \n  visibility = condition11 ;\n  \n  return new imports.rulesConfig.FormElementStatus(formElement.uuid, visibility, value, answersToSkip, validationErrors);\n};",
      "declarativeRule" : [ {
        "actions" : [ {
          "actionType" : "showFormElement"
        }, { } ],
        "conditions" : [ {
          "compoundRule" : {
            "rules" : [ {
              "lhs" : {
                "type" : "concept",
                "scope" : "encounter",
                "conceptName" : "IFA Tablets given during current visit",
                "conceptUuid" : "25dccb89-30b3-4294-b8fe-ce8cfa2da138",
                "conceptDataType" : "Coded"
              },
              "rhs" : {
                "type" : "answerConcept",
                "answerConceptNames" : [ "Yes" ],
                "answerConceptUuids" : [ "f7a3a360-58d3-4987-99ff-e7fb97f911a0" ]
              },
              "operator" : "containsAnswerConceptName"
            } ]
          }
        } ]
      } ],
      "mandatory" : true
    }, {
      "name" : "Does the Albendazole tablet consumed during the last visit?",
      "uuid" : "e7d27298-fe19-4718-99bd-9eb2b6b66398",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Does the Albendazole tablet consumed during the last visit?",
        "uuid" : "7637ac9e-97ca-4a80-8bba-d04e1a5a95a1",
        "dataType" : "Coded",
        "answers" : [ {
          "name" : "No",
          "uuid" : "30ade50e-fef5-4de1-9a6b-965cc66132ba",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 1.0,
          "active" : true
        }, {
          "name" : "Yes",
          "uuid" : "f7a3a360-58d3-4987-99ff-e7fb97f911a0",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 0.0,
          "active" : true
        } ],
        "active" : true
      },
      "displayOrder" : 6.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "Does the Albendazole Tablet given during current visit?",
      "uuid" : "8a7e3062-3788-4128-a4b4-f8a7970267b8",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Does the Albendazole Tablet given during current visit?",
        "uuid" : "330743a1-82d1-4a94-a91d-4d2e15a3a325",
        "dataType" : "Coded",
        "answers" : [ {
          "name" : "No",
          "uuid" : "30ade50e-fef5-4de1-9a6b-965cc66132ba",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 1.0,
          "active" : true
        }, {
          "name" : "Yes",
          "uuid" : "f7a3a360-58d3-4987-99ff-e7fb97f911a0",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 0.0,
          "active" : true
        } ],
        "active" : true
      },
      "displayOrder" : 7.0,
      "type" : "SingleSelect",
      "mandatory" : true
    } ],
    "display" : "Hb Details",
    "timed" : false
  }, {
    "uuid" : "cb26d678-0f13-40f8-8bce-c8491bc20d85",
    "name" : "Other Details",
    "displayOrder" : 3.0,
    "formElements" : [ {
      "name" : "24 hours dietary diversity",
      "uuid" : "d18068df-1293-429f-ace2-2859ecf7c4b0",
      "keyValues" : [ ],
      "concept" : {
        "name" : "24 hours dietary diversity",
        "uuid" : "87a52932-4efe-46a9-8e58-5f92372079b3",
        "dataType" : "Coded",
        "answers" : [ {
          "name" : "Pulses (beans, peas and lentils)",
          "uuid" : "179f313b-916b-4819-8c94-f7c8444130cb",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 1.0,
          "active" : true
        }, {
          "name" : "Yesterday was a fasting day",
          "uuid" : "8d0e23dc-9e7c-4d29-ab5f-66d8b873bbda",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 10.0,
          "active" : true
        }, {
          "name" : "Other",
          "uuid" : "cf383e34-8ed9-47bd-9e86-41f726773a1f",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 11.0,
          "active" : true
        }, {
          "name" : "Other vegetables",
          "uuid" : "4f3c99b3-be27-46e6-8120-af849b068613",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 8.0,
          "active" : true
        }, {
          "name" : "Other fruits",
          "uuid" : "cda106d1-823a-428c-b957-342d25a389dc",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 9.0,
          "active" : true
        }, {
          "name" : "Meat, poultry and fish",
          "uuid" : "9cfbde36-75f9-405b-bc43-724726f471c4",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 4.0,
          "active" : true
        }, {
          "name" : "Eggs",
          "uuid" : "71f08417-3d21-4416-8d45-cb51150c8c59",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 5.0,
          "active" : true
        }, {
          "name" : "Grains, white roots and tubers, and plantains",
          "uuid" : "e8cb4e4e-681f-40c9-bf2e-c34404cd2573",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 0.0,
          "active" : true
        }, {
          "name" : "Dairy",
          "uuid" : "23962ba6-d40a-492c-ba81-9175eb23526e",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 2.0,
          "active" : true
        }, {
          "name" : "Dark green leafy vegetables",
          "uuid" : "d70220f3-0636-4b0a-b30b-53ce4ceac5f3",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 6.0,
          "active" : true
        }, {
          "name" : "Nuts and seeds",
          "uuid" : "8f7b5bfc-001d-4cad-8422-7c46ec843d03",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 3.0,
          "active" : true
        }, {
          "name" : "Other vitamin A-rich fruits and vegetables",
          "uuid" : "f2eb59c2-7a22-42a1-b507-8625b90163ad",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 7.0,
          "active" : true
        } ],
        "active" : true
      },
      "displayOrder" : 1.0,
      "type" : "MultiSelect",
      "mandatory" : true
    }, {
      "name" : "Other diet, please specify",
      "uuid" : "4006fb44-816b-4cb0-98b0-77f611bb6126",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Other diet",
        "uuid" : "3e7b3103-47c0-439e-ad37-47155907b5d0",
        "dataType" : "Text",
        "answers" : [ ],
        "active" : true
      },
      "displayOrder" : 2.0,
      "type" : "SingleSelect",
      "rule" : "'use strict';\n({params, imports}) => {\n  const programEncounter = params.entity;\n  const moment = imports.moment;\n  const formElement = params.formElement;\n  const _ = imports.lodash;\n  let visibility = true;\n  let value = null;\n  let answersToSkip = [];\n  let validationErrors = [];\n  \n  const condition11 = new imports.rulesConfig.RuleCondition({programEncounter, formElement}).when.valueInEncounter(\"87a52932-4efe-46a9-8e58-5f92372079b3\").containsAnswerConceptName(\"cf383e34-8ed9-47bd-9e86-41f726773a1f\").matches();\n  \n  visibility = condition11 ;\n  \n  return new imports.rulesConfig.FormElementStatus(formElement.uuid, visibility, value, answersToSkip, validationErrors);\n};",
      "declarativeRule" : [ {
        "actions" : [ {
          "actionType" : "showFormElement"
        }, { } ],
        "conditions" : [ {
          "compoundRule" : {
            "rules" : [ {
              "lhs" : {
                "type" : "concept",
                "scope" : "encounter",
                "conceptName" : "24 hours dietary diversity",
                "conceptUuid" : "87a52932-4efe-46a9-8e58-5f92372079b3",
                "conceptDataType" : "Coded"
              },
              "rhs" : {
                "type" : "answerConcept",
                "answerConceptNames" : [ "Other" ],
                "answerConceptUuids" : [ "cf383e34-8ed9-47bd-9e86-41f726773a1f" ]
              },
              "operator" : "containsAnswerConceptName"
            } ]
          }
        } ]
      } ],
      "mandatory" : false
    }, {
      "name" : "How many meals do you consume in a day?",
      "uuid" : "b6225c88-d7cb-4ffc-9dc3-67f68883098a",
      "keyValues" : [ ],
      "concept" : {
        "name" : "How many meals do you consume in a day?",
        "uuid" : "e2873d46-b41c-40b9-b0a9-ecfb0058ce4a",
        "dataType" : "Coded",
        "answers" : [ {
          "name" : "Five times",
          "uuid" : "a0a069fb-ca61-414f-a3fb-f2660f52cdcb",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 4.0,
          "active" : true
        }, {
          "name" : "Four times",
          "uuid" : "f00919f7-6fdb-44b7-b460-11ee0b24d05c",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 3.0,
          "active" : true
        }, {
          "name" : "More then five times",
          "uuid" : "40da1b57-0b99-4a32-9fe8-3607cc199144",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 5.0,
          "active" : true
        }, {
          "name" : "One time",
          "uuid" : "7c7091df-63dd-42aa-a04c-5f912a0a97b6",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 0.0,
          "active" : true
        }, {
          "name" : "Two times",
          "uuid" : "ef894c98-68b8-4c10-82e5-acbfbdadf30c",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 1.0,
          "active" : true
        }, {
          "name" : "Three times",
          "uuid" : "c49641ec-bf82-4043-8a94-07fbce961ecc",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 2.0,
          "active" : true
        } ],
        "active" : true
      },
      "displayOrder" : 3.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "Presence of any comorbidity",
      "uuid" : "b4a43920-c858-48fd-a258-e305ef0b665a",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Presence of any comorbidity",
        "uuid" : "3c3e6291-8f9e-490c-92ad-8cc0a0e99a3a",
        "dataType" : "Coded",
        "answers" : [ {
          "name" : "Cholesterol",
          "uuid" : "7531fab3-2f94-4b69-88f4-8feb1cf2e1da",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 3.0,
          "active" : true
        }, {
          "name" : "Other",
          "uuid" : "cf383e34-8ed9-47bd-9e86-41f726773a1f",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 11.0,
          "active" : true
        }, {
          "name" : "Thalassemia",
          "uuid" : "5b605050-88f8-46e2-9d8e-81ae9530b17c",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 8.0,
          "active" : true
        }, {
          "name" : "None",
          "uuid" : "04668370-364e-42f8-a26e-2d8c50c8828d",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 0.0,
          "unique" : true,
          "active" : true
        }, {
          "name" : "Sickle cell trait",
          "uuid" : "c60afd5f-e217-40ee-bbe2-52711d2dab37",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 10.0,
          "active" : true
        }, {
          "name" : "Diahorrea",
          "uuid" : "465ff5f4-0c1a-41d6-81db-5ae613c5c9cc",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 7.0,
          "active" : true
        }, {
          "name" : "Kidney problem",
          "uuid" : "fba84927-45b3-49c9-a852-ce03091f2f0f",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 6.0,
          "active" : true
        }, {
          "name" : "Heart problem",
          "uuid" : "93f91d5f-8410-4b90-bd89-c6c79eca8e10",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 4.0,
          "active" : true
        }, {
          "name" : "Sickle cell disease",
          "uuid" : "839d5f3d-6be3-4cce-bbdd-2950e61a6c2b",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 9.0,
          "active" : true
        }, {
          "name" : "Hypertension",
          "uuid" : "4ee14786-fd00-466d-80a9-1cdc8f5be306",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 1.0,
          "active" : true
        }, {
          "name" : "Diabetes",
          "uuid" : "d379a1bb-c4d8-40ec-835e-3c47ead53489",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 2.0,
          "active" : true
        }, {
          "name" : "Respiratory problem",
          "uuid" : "da0c27c1-1241-4cb9-b322-975d7ed1927b",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 5.0,
          "active" : true
        } ],
        "active" : true
      },
      "displayOrder" : 4.0,
      "type" : "MultiSelect",
      "mandatory" : true
    }, {
      "name" : "Other comorbidity, please specify",
      "uuid" : "ef69267d-f888-41d5-9a1b-81154a855984",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Other comorbidity",
        "uuid" : "6951e6b9-05ca-499a-852d-92c462267bfe",
        "dataType" : "Text",
        "answers" : [ ],
        "active" : true
      },
      "displayOrder" : 5.0,
      "type" : "SingleSelect",
      "rule" : "'use strict';\n({params, imports}) => {\n  const programEncounter = params.entity;\n  const moment = imports.moment;\n  const formElement = params.formElement;\n  const _ = imports.lodash;\n  let visibility = true;\n  let value = null;\n  let answersToSkip = [];\n  let validationErrors = [];\n  \n  const condition11 = new imports.rulesConfig.RuleCondition({programEncounter, formElement}).when.valueInEncounter(\"3c3e6291-8f9e-490c-92ad-8cc0a0e99a3a\").containsAnswerConceptName(\"cf383e34-8ed9-47bd-9e86-41f726773a1f\").matches();\n  \n  visibility = condition11 ;\n  \n  return new imports.rulesConfig.FormElementStatus(formElement.uuid, visibility, value, answersToSkip, validationErrors);\n};",
      "declarativeRule" : [ {
        "actions" : [ {
          "actionType" : "showFormElement"
        }, { } ],
        "conditions" : [ {
          "compoundRule" : {
            "rules" : [ {
              "lhs" : {
                "type" : "concept",
                "scope" : "encounter",
                "conceptName" : "Presence of any comorbidity",
                "conceptUuid" : "3c3e6291-8f9e-490c-92ad-8cc0a0e99a3a",
                "conceptDataType" : "Coded"
              },
              "rhs" : {
                "type" : "answerConcept",
                "answerConceptNames" : [ "Other" ],
                "answerConceptUuids" : [ "cf383e34-8ed9-47bd-9e86-41f726773a1f" ]
              },
              "operator" : "containsAnswerConceptName"
            } ]
          }
        } ]
      } ],
      "mandatory" : true
    }, {
      "name" : "Addiction",
      "uuid" : "faedecc9-5fad-4293-951a-4f5713eb2ce4",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Addiction",
        "uuid" : "00ea2de6-9bce-4d49-8c47-36febab57c2c",
        "dataType" : "Coded",
        "answers" : [ {
          "name" : "None",
          "uuid" : "04668370-364e-42f8-a26e-2d8c50c8828d",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 0.0,
          "unique" : true,
          "active" : true
        }, {
          "name" : "Smoking",
          "uuid" : "b2dd9cf8-c117-426d-9419-94391ba41e3c",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 2.0,
          "active" : true
        }, {
          "name" : "Other",
          "uuid" : "cf383e34-8ed9-47bd-9e86-41f726773a1f",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 4.0,
          "active" : true
        }, {
          "name" : "Tobacco",
          "uuid" : "42f6b5be-9769-4665-9d95-aa5b4f967f8e",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 1.0,
          "active" : true
        }, {
          "name" : "Alcohol",
          "uuid" : "ce110fdf-bd7c-4ace-bb00-37eea1b565bf",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 3.0,
          "active" : true
        } ],
        "active" : true
      },
      "displayOrder" : 6.0,
      "type" : "MultiSelect",
      "mandatory" : true
    }, {
      "name" : "Other addiction, please specify",
      "uuid" : "8b352df7-edc2-4fcf-b550-dc251bdb3d7d",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Other addiction",
        "uuid" : "a8b8734b-00ff-403c-88c5-8a1f0ca6fc82",
        "dataType" : "Text",
        "answers" : [ ],
        "active" : true
      },
      "displayOrder" : 7.0,
      "type" : "SingleSelect",
      "rule" : "'use strict';\n({params, imports}) => {\n  const programEncounter = params.entity;\n  const moment = imports.moment;\n  const formElement = params.formElement;\n  const _ = imports.lodash;\n  let visibility = true;\n  let value = null;\n  let answersToSkip = [];\n  let validationErrors = [];\n  \n  const condition11 = new imports.rulesConfig.RuleCondition({programEncounter, formElement}).when.valueInEncounter(\"00ea2de6-9bce-4d49-8c47-36febab57c2c\").containsAnswerConceptName(\"cf383e34-8ed9-47bd-9e86-41f726773a1f\").matches();\n  \n  visibility = condition11 ;\n  \n  return new imports.rulesConfig.FormElementStatus(formElement.uuid, visibility, value, answersToSkip, validationErrors);\n};",
      "declarativeRule" : [ {
        "actions" : [ {
          "actionType" : "showFormElement"
        }, { } ],
        "conditions" : [ {
          "compoundRule" : {
            "rules" : [ {
              "lhs" : {
                "type" : "concept",
                "scope" : "encounter",
                "conceptName" : "Addiction",
                "conceptUuid" : "00ea2de6-9bce-4d49-8c47-36febab57c2c",
                "conceptDataType" : "Coded"
              },
              "rhs" : {
                "type" : "answerConcept",
                "answerConceptNames" : [ "Other" ],
                "answerConceptUuids" : [ "cf383e34-8ed9-47bd-9e86-41f726773a1f" ]
              },
              "operator" : "containsAnswerConceptName"
            } ]
          }
        } ]
      } ],
      "mandatory" : true
    }, {
      "name" : "Counselling given on",
      "uuid" : "6cf4d402-065c-452a-a29e-4e209c818dae",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Counselling given on",
        "uuid" : "4669ef42-aa4d-4ffc-aef4-db2492f0e905",
        "dataType" : "Coded",
        "answers" : [ {
          "name" : "IFA Tablet consumption",
          "uuid" : "d57d1d2a-5bfb-4453-bdff-9c97938ab164",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 1.0,
          "active" : true
        }, {
          "name" : "All of the above",
          "uuid" : "ca157131-0c63-4bde-98d8-4cf3deb0eb4e",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 11.0,
          "unique" : true,
          "active" : true
        }, {
          "name" : "None",
          "uuid" : "04668370-364e-42f8-a26e-2d8c50c8828d",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 12.0,
          "unique" : true,
          "active" : true
        }, {
          "name" : "Adequate sleep of 7-8 hours",
          "uuid" : "8d4bbe65-e93c-4ef7-a005-e55aa5ee7742",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 3.0,
          "active" : true
        }, {
          "name" : "Doing regular physical activity for minimum 1 hour",
          "uuid" : "20b20ad8-2363-4c05-b1e0-14da604a415c",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 6.0,
          "active" : true
        }, {
          "name" : "To stop doing addiction",
          "uuid" : "64bc1d99-1efe-43b7-ade5-f68758472b7d",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 7.0,
          "active" : true
        }, {
          "name" : "Dietary diversity",
          "uuid" : "68dcc3d8-0c91-4799-9e04-e2d411df17af",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 10.0,
          "active" : true
        }, {
          "name" : "Drinking 2 to 2.5 liters of water daily",
          "uuid" : "b10f68bb-04b2-44fb-a2cd-1ba09ba6c658",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 4.0,
          "active" : true
        }, {
          "name" : "Menstrual health and hygiene",
          "uuid" : "3683a95b-2348-43f5-b8be-06d76f04bb98",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 9.0,
          "active" : true
        }, {
          "name" : "Personal hygiene",
          "uuid" : "f6204be8-37d2-4b9b-9486-5ba0828887f6",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 5.0,
          "active" : true
        }, {
          "name" : "To reduce screen time less than 2 hours",
          "uuid" : "e14ea09d-0ae3-4e74-852d-397898bde2ac",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 8.0,
          "active" : true
        }, {
          "name" : "Balanced diet",
          "uuid" : "25b9aa40-fc25-4730-b7e7-508aed867808",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 2.0,
          "active" : true
        } ],
        "active" : true
      },
      "displayOrder" : 8.0,
      "type" : "MultiSelect",
      "mandatory" : true
    } ],
    "display" : "Other Details",
    "timed" : false
  } ],
  "decisionRule" : "",
  "visitScheduleRule" : "",
  "validationRule" : "",
  "checklistsRule" : "",
  "decisionConcepts" : [ ],
  "voided" : true
}